var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.016,1,2.023]],["body/classes/AllExceptionsFilter.html",[0,0.016,1,2.822,2,1.416,3,0.243,4,0.285,5,0.285,6,3.667,7,2.724,8,2.822,9,4.976,10,0.529,11,1.352,12,4.435,13,4.402,14,2.894,15,4.976,16,5.323,17,0.775,18,3.27,19,0.846,20,0.033,21,0.846,22,0.585,23,0.846,24,4.402,25,0.922,26,2.724,27,0.573,28,4.402,29,3.27,30,0.585,31,3.667,32,3.667,33,2.724,34,1.298,35,3.27,36,0.33,37,2.023,38,3.27,39,3.27,40,3.27,41,3.27,42,3.27,43,2.364,44,3.27,45,3.27,46,3.27,47,2.724,48,3.27,49,3.27,50,3.27,51,3.27,52,1.703,53,3.27,54,2.096,55,3.27,56,0.023,57,0.023]],["title/modules/AppModule.html",[58,1.149,59,2.023]],["body/modules/AppModule.html",[0,0.017,1,2.852,3,0.246,4,0.29,5,0.29,20,0.034,27,0.687,30,0.595,36,0.335,54,2.129,56,0.023,57,0.023,58,1.62,59,3.914,60,1.439,61,2.109,62,2.767,63,2.767,64,2.994,65,3.308,66,2.994,67,2.56,68,1.911,69,1.911,70,3.322,71,2.852,72,3.322,73,3.322,74,4.448,75,2.767,76,3.322,77,3.322,78,3.322,79,3.322,80,2.767,81,2.129,82,2.767,83,3.322,84,3.322,85,3.322,86,2.767,87,1.911,88,2.767,89,3.322]],["title/controllers/AuthController.html",[90,1.497,91,2.023]],["body/controllers/AuthController.html",[0,0.022,3,0.328,4,0.385,5,0.385,20,0.033,27,0.614,30,0.79,36,0.445,56,0.027,57,0.027,90,2.093,91,3.418,92,2.093,93,3.678,94,3.192,95,4.414,96,2.482,97,3.192,98,4.414,99,2.299,100,1.476]],["title/modules/AuthModule.html",[58,1.149,64,1.644]],["body/modules/AuthModule.html",[0,0.014,3,0.205,4,0.241,5,0.241,20,0.034,27,0.692,30,0.494,36,0.279,56,0.02,57,0.02,58,1.426,60,1.196,61,1.856,64,3.233,66,2.828,67,2.253,68,1.589,69,1.589,71,2.51,87,2.253,91,2.917,92,1.856,96,2.604,97,1.996,101,2.3,102,2.3,103,2.3,104,2.3,105,2.828,106,3.125,107,3.125,108,2.352,109,2.761,110,3.262,111,2.761,112,2.761,113,1.589,114,2.761,115,1.996,116,1.77,117,2.3,118,2.761,119,2.761,120,2.761,121,2.51,122,2.761,123,2.3,124,2.761,125,2.761,126,2.761,127,1.589,128,2.761,129,2.3,130,2.3,131,2.761,132,2.761,133,2.761,134,1.996]],["title/injectables/AuthService.html",[96,1.367,135,0.623]],["body/injectables/AuthService.html",[0,0.011,3,0.158,4,0.186,5,0.186,10,0.344,11,0.993,12,1.772,14,1.108,17,0.926,19,1.011,20,0.034,21,1.011,22,0.7,23,1.011,25,0.912,27,0.569,30,0.381,36,0.215,37,1.801,56,0.017,57,0.017,96,1.4,100,1.308,108,2.227,115,1.538,127,2.25,134,2.338,135,0.637,136,0.844,137,1.772,138,2.345,139,3.232,140,3.232,141,1.4,142,1.772,143,3.639,144,5.142,145,2.127,146,2.693,147,3.232,148,2.127,149,2.512,150,1.538,151,3.232,152,1.52,153,1.892,154,2.127,155,2.035,156,1.86,157,1.538,158,2.127,159,1.363,160,2.127,161,1.538,162,1.772,163,2.127,164,1.772,165,2.827,166,2.693,167,2.25,168,2.506,169,1.579,170,3.718,171,2.275,172,3.296,173,3.257,174,1.108,175,2.127,176,3.232,177,2.127,178,2.072,179,2.127,180,3.232,181,1.538,182,2.338,183,1.108,184,1.772,185,3.232,186,2.127,187,2.127,188,2.127,189,2.127,190,1.538]],["title/classes/ContextTrace.html",[0,0.016,191,2.023]],["body/classes/ContextTrace.html",[0,0.013,2,0.691,3,0.241,4,0.139,5,0.139,10,0.258,14,1.343,17,0.97,19,0.413,20,0.034,21,0.413,22,0.733,23,1.193,27,0.531,34,1.024,36,0.328,37,1.993,43,1.154,54,2.956,56,0.013,57,0.013,81,3.264,100,1.775,141,1.117,152,1.739,167,0.918,169,1.146,183,0.831,191,2.081,192,0.918,193,1.865,194,4.422,195,3.841,196,2.391,197,3.841,198,1.595,199,3.264,200,1.595,201,3.247,202,1.595,203,1.595,204,1.595,205,1.595,206,1.653,207,2.149,208,1.865,209,1.865,210,1.154,211,2.149,212,1.329,213,1.329,214,1.329,215,1.154,216,1.865,217,1.865,218,1.653,219,1.865,220,1.865,221,1.329,222,1.154,223,1.329,224,1.329,225,1.329,226,3.107,227,3.107,228,1.329,229,1.329,230,1.868,231,1.329,232,2.149,233,2.149,234,1.329,235,1.329,236,1.154,237,0.918,238,1.329,239,2.149,240,1.329,241,1.329,242,1.329,243,1.329,244,1.329,245,1.329,246,1.329,247,1.329,248,1.329,249,1.329,250,1.329,251,2.149,252,1.329,253,3.841,254,1.329,255,1.154,256,1.329,257,2.961,258,1.329,259,1.329,260,3.65,261,1.329,262,1.329,263,1.329,264,1.329,265,1.329,266,1.329,267,1.329,268,1.329,269,1.023,270,1.329,271,1.329,272,1.329,273,1.329,274,1.329,275,1.154,276,1.329,277,1.329,278,1.329,279,1.329,280,4.131,281,1.329,282,1.329,283,1.329,284,2.149,285,1.329,286,1.329,287,2.149,288,1.329,289,1.329,290,1.329,291,1.329,292,1.329,293,1.329,294,1.329,295,1.329,296,1.329,297,1.329,298,1.329,299,2.149,300,1.329,301,1.329,302,1.329,303,1.329,304,1.329,305,1.154,306,1.329,307,1.329,308,1.329,309,1.329,310,1.329,311,1.329]],["title/classes/CreateUserDto.html",[0,0.016,312,1.644]],["body/classes/CreateUserDto.html",[0,0.02,2,1.704,3,0.292,4,0.343,5,0.343,10,0.637,17,1.176,20,0.033,22,0.889,27,0.453,36,0.397,56,0.026,57,0.026,100,2.013,152,1.756,153,2.357,155,2.357,193,3.591,237,2.857,312,2.586,313,4.533,314,2.844,315,3.183,316,4.762,317,3.933,318,3.277,319,3.933,320,2.263,321,3.277]],["title/modules/DatabaseModule.html",[58,1.149,105,1.644]],["body/modules/DatabaseModule.html",[0,0.022,3,0.332,4,0.39,5,0.39,20,0.033,27,0.618,30,0.801,36,0.451,56,0.028,57,0.028,58,1.957,60,1.937,87,2.573,105,2.799,110,3.725,322,4.471,323,4.166,324,4.471]],["title/injectables/JwtStrategy.html",[106,1.816,135,0.623]],["body/injectables/JwtStrategy.html",[0,0.018,3,0.264,4,0.311,5,0.311,10,0.576,11,1.43,17,1.103,19,0.921,20,0.033,21,0.921,22,0.637,23,0.921,25,1.004,27,0.634,30,0.637,36,0.359,56,0.024,57,0.024,106,2.679,113,2.048,116,2.281,117,2.965,127,2.679,130,2.965,135,0.918,136,1.412,138,2.46,141,2.248,150,2.573,155,1.542,166,2.965,169,1.093,184,2.965,236,2.573,325,2.965,326,3.367,327,3.559,328,4.656,329,3.559,330,3.559,331,2.965,332,2.573,333,2.965,334,2.573,335,2.965,336,2.965,337,3.559,338,3.559,339,3.559,340,3.559,341,3.559,342,3.559,343,3.559,344,3.559]],["title/injectables/LocalStrategy.html",[107,1.816,135,0.623]],["body/injectables/LocalStrategy.html",[0,0.017,3,0.25,4,0.295,5,0.295,10,0.546,11,1.381,17,1.065,19,1.163,20,0.033,21,1.163,22,0.805,23,1.163,25,0.952,27,0.621,30,0.604,36,0.341,37,1.229,52,1.758,56,0.023,57,0.023,96,2.502,97,2.441,99,1.758,100,1.129,107,2.587,113,1.942,135,0.887,136,1.339,138,2.397,141,1.462,149,2.397,152,1.774,153,2.336,155,1.462,156,2.587,169,1.037,174,1.758,326,3.251,331,2.812,332,2.441,333,2.812,334,2.441,335,2.812,336,2.812,345,2.812,346,2.812,347,3.375,348,4.496,349,3.375,350,2.812,351,4.496,352,3.375,353,2.441]],["title/classes/Logger.html",[0,0.016,34,1.253]],["body/classes/Logger.html",[0,0.012,2,0.609,3,0.284,4,0.123,5,0.123,10,0.228,11,0.715,14,1.801,17,1.157,19,1.263,20,0.034,21,1.263,22,0.874,23,1.263,25,1.377,26,3.948,27,0.503,34,1.181,36,0.3,37,1.93,43,1.017,54,1.908,56,0.012,57,0.012,81,3.832,100,1.157,141,0.609,152,1.572,167,1.339,169,1.062,183,0.733,191,1.492,192,0.809,194,2.881,195,2.479,196,0.902,197,2.479,199,2.646,206,1.492,207,1.939,208,1.683,209,1.683,210,1.017,211,1.939,212,1.172,213,1.172,214,1.172,215,1.017,216,1.683,217,2.501,218,2.217,219,2.501,220,2.501,221,1.172,222,1.017,223,1.172,224,1.172,225,1.172,226,2.881,227,2.881,228,1.172,229,1.172,230,1.99,231,1.172,232,1.939,233,1.939,234,1.172,235,1.172,236,1.017,237,0.809,238,1.172,239,1.939,240,1.172,241,1.172,242,1.172,243,1.172,244,1.172,245,1.172,246,1.172,247,1.172,248,1.172,249,1.172,250,1.172,251,1.939,252,1.172,253,3.64,254,1.172,255,1.017,256,1.172,257,2.77,258,1.172,259,1.172,260,3.439,261,1.172,262,1.172,263,1.172,264,1.172,265,1.172,266,1.172,267,1.172,268,1.172,269,1.492,270,1.172,271,1.172,272,1.172,273,1.172,274,1.172,275,1.017,276,1.172,277,1.172,278,1.939,279,1.172,280,4.634,281,1.939,282,1.172,283,1.939,284,1.939,285,1.939,286,1.939,287,1.939,288,1.939,289,1.939,290,1.172,291,1.939,292,1.172,293,1.939,294,1.172,295,1.172,296,1.172,297,1.939,298,1.172,299,1.939,300,1.172,301,1.172,302,1.172,303,1.172,304,1.172,305,1.017,306,1.172,307,1.172,308,1.172,309,1.172,310,1.172,311,1.172,354,1.939,355,2.327,356,2.327,357,2.327,358,1.407,359,1.407,360,1.407,361,1.407,362,1.407,363,1.407,364,1.407,365,1.407,366,1.407,367,1.407,368,1.407]],["title/controllers/LoginController.html",[90,1.497,369,2.023]],["body/controllers/LoginController.html",[0,0.018,3,0.264,4,0.311,5,0.311,10,0.576,11,1.43,17,0.843,19,0.921,20,0.033,21,0.921,22,0.834,23,0.921,25,1.004,27,0.658,30,0.637,36,0.359,56,0.024,57,0.024,90,1.687,92,1.687,94,2.573,99,1.854,100,1.19,169,1.093,315,2.281,320,2.048,369,2.985,370,2.965,371,3.559,372,2.985,373,3.559,374,3.486,375,4.656,376,3.559,377,3.559,378,2.965,379,3.879,380,3.559,381,3.879,382,2.965,383,2.985,384,3.559,385,2.965,386,2.703,387,2.965,388,3.559,389,3.559,390,2.965,391,3.559]],["title/classes/LoginDto.html",[0,0.016,374,1.816]],["body/classes/LoginDto.html",[0,0.023,2,1.486,3,0.255,4,0.299,5,0.299,10,0.555,17,1.207,20,0.033,22,0.913,27,0.523,36,0.346,56,0.023,57,0.023,152,1.782,153,2.208,155,2.208,172,3.479,193,3.287,237,2.615,315,3.267,316,4.833,318,2.858,320,1.974,321,2.858,374,2.615,392,2.858,393,4.246,394,3.786,395,3.786,396,5.097,397,3.43,398,3.43,399,3.43,400,3.43,401,5.427,402,4.545,403,2.199]],["title/modules/LoginModule.html",[58,1.149,65,1.816]],["body/modules/LoginModule.html",[0,0.019,3,0.282,4,0.332,5,0.332,20,0.033,27,0.65,30,0.681,36,0.384,56,0.025,57,0.025,58,1.77,60,1.648,61,2.305,64,3.108,65,3.534,67,2.798,68,2.189,69,2.189,71,3.116,87,2.798,92,2.305,369,3.435,386,3.108,387,3.169,404,3.169,405,3.169,406,3.805,407,3.805,408,3.805,409,3.805]],["title/injectables/LoginService.html",[135,0.623,386,1.644]],["body/injectables/LoginService.html",[0,0.013,3,0.2,4,0.235,5,0.235,10,0.435,11,1.181,17,0.911,19,0.994,20,0.034,21,1.16,22,0.688,23,0.994,25,0.759,27,0.563,30,0.482,36,0.271,37,1.633,56,0.02,57,0.02,96,2.332,99,1.401,100,0.9,134,3.244,135,0.758,136,1.067,138,2.126,141,1.165,153,1.665,155,1.665,156,2.212,167,1.548,168,3.137,169,1.59,170,3.743,171,2.549,172,3.318,173,3.202,174,2.002,182,2.78,190,3.743,255,1.945,257,2.78,269,1.724,346,2.241,374,3.098,385,2.241,386,2.002,393,3.737,394,2.241,395,2.241,410,2.241,411,3.844,412,2.69,413,3.844,414,2.69,415,2.241,416,2.241,417,2.69,418,2.69,419,2.69,420,2.69,421,2.241,422,2.69,423,2.69,424,3.844,425,3.202]],["title/injectables/RbacInterceptor.html",[135,0.623,426,2.023]],["body/injectables/RbacInterceptor.html",[0,0.017,3,0.252,4,0.296,5,0.296,8,2.178,10,0.55,11,1.387,17,1.07,19,1.168,20,0.033,21,1.168,22,0.809,23,1.168,25,0.958,27,0.52,30,0.608,36,0.343,37,1.237,52,1.769,56,0.023,57,0.023,99,1.769,100,1.136,135,0.891,136,1.348,141,1.472,152,1.558,167,1.955,169,1.043,171,1.769,182,2.457,183,1.769,196,2.178,353,2.457,425,4.226,426,2.895,427,2.83,428,3.762,429,3.397,430,3.397,431,3.762,432,4.503,433,3.668,434,4.503,435,3.397,436,4.226,437,3.762,438,4.516,439,2.457,440,2.457,441,2.83,442,3.397,443,3.397]],["title/injectables/TransformInterceptor.html",[135,0.623,444,2.283]],["body/injectables/TransformInterceptor.html",[0,0.018,3,0.271,4,0.319,5,0.319,8,2.345,10,0.592,11,1.456,17,0.867,19,0.946,20,0.033,21,0.946,22,0.655,23,0.946,25,1.032,27,0.64,30,0.655,34,1.452,36,0.369,37,1.726,47,3.048,56,0.024,57,0.024,135,0.935,136,1.452,169,1.124,196,2.345,428,3.949,431,3.949,432,4.635,433,3.803,434,4.635,436,4.381,437,3.949,439,2.645,440,2.645,441,3.048,444,3.428,445,3.048,446,3.658,447,3.658,448,3.658,449,3.048,450,3.658,451,3.658]],["title/classes/UpdateUserDto.html",[0,0.016,452,1.816]],["body/classes/UpdateUserDto.html",[0,0.022,2,1.945,3,0.333,4,0.392,5,0.392,20,0.032,27,0.62,36,0.453,56,0.028,57,0.028,312,2.339,314,3.247,334,3.247,372,2.878,452,3.1,453,3.741,454,4.49,455,3.741,456,3.247,457,3.247,458,4.49]],["title/classes/User.html",[0,0.016,149,1.497]],["body/classes/User.html",[0,0.024,2,2.079,3,0.356,4,0.419,5,0.419,20,0.031,36,0.484,56,0.029,57,0.029,149,2.657,459,3.998]],["title/controllers/UsersController.html",[90,1.497,460,2.023]],["body/controllers/UsersController.html",[0,0.013,3,0.188,4,0.221,5,0.221,10,0.41,11,1.131,17,1.198,19,1.231,20,0.033,21,1.231,22,0.905,23,1.231,25,1.426,27,0.627,30,0.454,36,0.256,56,0.019,57,0.019,90,1.201,92,1.201,94,1.832,99,1.32,100,0.847,108,1.879,113,1.458,149,1.201,152,1.746,169,1.553,312,2.905,315,3.241,320,1.458,372,2.36,378,3.067,379,3.067,381,3.067,382,2.111,390,2.111,426,2.36,452,3.209,457,2.662,460,2.36,461,2.111,462,2.534,463,3.966,464,3.067,465,3.067,466,3.067,467,2.111,468,2.534,469,2.534,470,2.534,471,2.534,472,2.111,473,3.682,474,2.534,475,3.815,476,2.111,477,3.682,478,2.534,479,2.111,480,3.682,481,2.534,482,2.534,483,2.534,484,2.534,485,2.534,486,2.534,487,2.111,488,2.111,489,2.111,490,2.534,491,2.534,492,2.534,493,2.534,494,2.534,495,2.534,496,2.534,497,2.534,498,2.534,499,2.534,500,2.534,501,2.534,502,2.534,503,2.534,504,2.534]],["title/modules/UsersModule.html",[58,1.149,66,1.644]],["body/modules/UsersModule.html",[0,0.019,3,0.276,4,0.325,5,0.325,20,0.033,27,0.667,30,0.667,36,0.376,56,0.025,57,0.025,58,1.746,60,1.613,61,2.273,66,3.185,67,2.759,68,2.143,69,2.143,71,3.074,87,2.759,92,2.273,105,3.09,108,2.57,121,3.074,123,3.102,460,3.4,487,3.102,505,3.723,506,3.723,507,3.723,508,3.723,509,3.723,510,3.723]],["title/injectables/UsersService.html",[108,1.367,135,0.623]],["body/injectables/UsersService.html",[0,0.012,3,0.171,4,0.202,5,0.202,10,0.374,11,1.057,17,1.209,19,1.259,20,0.034,21,1.259,22,0.872,23,1.259,25,1.439,27,0.608,30,0.414,36,0.233,37,1.773,56,0.018,57,0.018,100,0.772,108,1.49,135,0.678,136,0.917,138,2.42,141,1.49,142,1.924,143,3.793,146,2.866,149,1.948,152,1.262,153,1.49,155,1.49,156,2.62,157,1.67,159,1.481,161,1.67,162,1.924,164,1.924,165,1.67,169,1.495,170,2.487,171,1.792,172,2.205,174,1.792,178,2.634,181,1.67,190,3.293,199,3.559,312,2.658,372,2.205,415,1.924,416,1.924,452,3.042,457,2.487,463,3.793,464,2.866,465,2.866,466,2.866,467,2.866,472,2.866,475,3.691,476,2.866,479,2.866,488,1.924,489,1.924,511,1.924,512,2.31,513,2.31,514,2.31,515,2.31,516,2.31,517,2.31,518,2.487,519,2.31,520,2.31,521,3.44,522,2.31,523,2.31,524,4.11,525,2.31,526,2.31]],["title/injectables/ValidationPipe.html",[135,0.623,383,2.023]],["body/injectables/ValidationPipe.html",[0,0.026,3,0.221,4,0.259,5,0.259,8,1.905,10,0.481,11,1.267,17,0.977,19,1.067,20,0.034,21,1.067,22,0.738,23,1.067,25,1.163,27,0.589,30,0.532,34,1.18,36,0.3,37,1.863,52,1.548,56,0.021,57,0.021,135,0.813,136,1.18,138,2.245,150,2.15,152,0.913,165,3.425,169,1.455,171,1.548,174,1.548,199,1.905,230,2.943,326,2.15,353,2.15,383,2.644,403,1.905,449,2.476,456,2.15,527,2.476,528,4.124,529,4.124,530,4.124,531,2.973,532,4.736,533,4.736,534,4.124,535,2.973,536,5.115,537,2.973,538,4.124,539,2.973,540,2.973,541,2.476,542,2.973,543,3.436,544,2.973,545,2.476,546,2.973,547,2.973,548,4.736,549,2.973,550,2.973,551,4.124,552,2.973,553,2.973,554,2.973]],["title/coverage.html",[555,3.108]],["body/coverage.html",[0,0.028,1,1.702,5,0.232,6,2.212,7,2.212,20,0.033,22,0.476,34,1.767,52,1.383,56,0.02,57,0.02,86,2.212,90,2.111,91,1.702,93,2.212,96,1.15,106,1.528,107,1.528,108,1.15,116,1.702,121,1.702,135,1.114,137,2.212,149,1.259,159,1.702,171,3.318,191,1.702,192,2.563,312,1.383,313,2.212,314,2.754,323,1.92,325,2.212,345,2.212,369,1.702,370,2.212,374,1.528,383,1.702,386,1.383,392,2.212,410,2.212,426,1.702,427,2.212,444,1.92,445,2.212,452,1.528,453,2.212,459,2.212,460,1.702,461,2.212,511,2.212,518,1.92,527,2.212,555,1.92,556,2.656,557,2.656,558,3.173,559,5.522,560,2.212,561,5.969,562,2.212,563,4.454,564,5.361,565,3.809,566,2.212,567,2.212,568,4.865,569,2.212,570,2.212,571,2.212,572,2.212,573,2.212,574,3.809,575,2.212,576,2.656,577,3.173,578,3.809,579,3.809,580,2.656,581,2.656,582,2.656]],["title/dependencies.html",[61,1.799,583,2.641]],["body/dependencies.html",[0,0.024,20,0.034,30,0.662,33,3.976,56,0.025,57,0.025,61,1.753,75,3.08,80,3.08,81,2.37,113,2.127,115,2.673,127,2.127,161,2.673,206,2.37,208,2.673,209,2.673,210,2.673,320,2.127,332,3.822,350,3.08,403,2.37,439,2.673,455,3.08,456,2.673,541,3.08,584,5.586,585,3.697,586,3.697,587,3.697,588,3.697,589,3.697,590,3.697,591,3.697,592,3.697,593,3.697,594,3.697,595,3.697,596,3.697,597,3.697,598,3.697,599,3.697,600,3.697,601,3.697,602,3.697,603,3.697,604,3.08,605,3.697,606,3.697]],["title/miscellaneous/enumerations.html",[607,1.376,608,3.161]],["body/miscellaneous/enumerations.html",[3,0.386,10,0.686,14,2.708,20,0.033,56,0.027,57,0.027,192,2.437,215,3.76,216,3.76,217,3.76,218,3.333,219,3.76,220,3.76,230,3.636,607,2.206,608,3.529,609,3.529]],["title/miscellaneous/functions.html",[607,1.376,610,3.161]],["body/miscellaneous/functions.html",[10,0.63,19,1.275,20,0.032,21,1.275,22,0.883,23,1.275,25,1.39,31,4.107,32,4.107,34,1.957,56,0.025,57,0.025,152,1.843,153,2.136,159,3.16,178,3.47,181,2.813,421,4.107,433,3.565,440,2.813,518,3.915,567,3.24,569,4.51,570,3.24,577,3.24,607,2.026,610,3.24,611,3.889,612,4.93,613,3.889,614,3.889,615,3.24,616,3.889,617,3.889]],["title/index.html",[10,0.427,618,2.641,619,2.641]],["body/index.html",[4,0.289,20,0.033,56,0.023,57,0.023,82,2.758,127,1.905,168,2.845,206,2.122,222,3.869,403,2.122,555,2.394,604,3.698,615,2.758,620,3.311,621,3.311,622,4.439,623,3.311,624,3.311,625,3.311,626,3.311,627,3.311,628,3.311,629,3.311,630,3.311,631,3.311,632,3.311,633,3.311,634,3.311,635,3.311,636,3.311,637,5.867,638,3.311,639,2.758,640,3.311,641,5.743,642,3.311,643,3.311,644,4.439,645,3.311,646,3.311,647,3.311,648,3.311,649,4.439,650,4.439,651,3.311,652,3.311,653,3.311,654,4.439,655,4.439,656,3.311,657,3.311,658,3.311,659,3.311,660,3.311,661,2.758,662,3.311,663,3.311,664,3.311,665,3.311,666,3.311,667,3.311,668,3.311,669,3.311,670,3.311,671,3.311,672,3.311,673,3.311,674,3.311,675,3.311,676,3.311,677,3.311,678,3.311]],["title/modules.html",[60,1.862]],["body/modules.html",[20,0.028,56,0.028,57,0.028,59,2.878,60,1.945,64,2.339,65,2.584,66,2.339,105,2.339,661,4.986,679,5.985,680,5.985,681,6.121,682,4.49,683,4.49]],["title/overview.html",[684,3.581]],["body/overview.html",[2,1.467,20,0.033,56,0.023,57,0.023,59,3.841,60,1.467,61,2.136,62,2.821,63,2.821,64,3.314,65,3.395,66,3.121,67,2.593,68,1.948,69,1.948,92,1.605,96,2.556,101,2.821,102,2.821,103,2.821,104,2.821,105,2.812,106,2.914,107,2.914,108,2.339,136,1.344,183,1.764,386,2.638,404,2.821,405,2.821,684,2.821,685,3.386,686,3.386,687,3.386]],["title/miscellaneous/variables.html",[607,1.376,688,3.161]],["body/miscellaneous/variables.html",[3,0.289,10,0.343,14,1.103,20,0.034,22,1.053,34,1.279,52,1.103,56,0.017,57,0.017,88,2.685,116,2.066,121,2.066,129,1.765,138,1.004,152,1.198,153,0.918,155,0.918,156,1.219,157,1.532,168,1.358,174,1.103,178,1.358,183,2.031,192,1.219,218,2.066,230,2.955,237,3.234,269,3.475,275,1.532,305,2.82,323,2.33,354,3.249,475,1.532,543,2.685,545,3.631,558,1.765,560,2.685,562,2.685,566,1.765,571,1.765,572,1.765,573,3.249,575,1.765,607,1.103,609,3.249,639,3.631,688,1.765,689,2.118,690,2.118,691,2.118,692,2.118,693,2.118,694,2.118,695,4.689,696,3.223,697,3.9,698,2.118,699,2.118,700,3.9,701,5.135,702,3.9,703,3.9,704,3.9,705,3.9,706,2.118,707,3.223,708,3.9,709,2.118,710,2.118,711,3.223,712,3.223,713,3.223,714,3.223,715,3.223,716,2.118,717,2.118,718,4.689,719,2.118,720,2.118,721,3.9,722,2.118,723,2.118,724,3.223,725,3.223,726,2.118,727,2.118,728,2.118,729,3.9,730,2.118,731,2.118,732,2.118,733,2.118,734,2.118,735,3.223,736,2.118]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":565,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{}}}],["1.0.0",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["10485760",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1h",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["2",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{}}}],["2.0.2",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["2.29.1",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/RbacInterceptor.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["4.0.0",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":685,"title":{},"body":{"overview.html":{}}}],["5.0.9",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["6.0.8",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":687,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":686,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["access",{"_index":354,"title":{},"body":{"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["access(...args",{"_index":293,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["access.20200320.log",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["account",{"_index":395,"title":{},"body":{"classes/LoginDto.html":{},"injectables/LoginService.html":{}}}],["action",{"_index":524,"title":{},"body":{"injectables/UsersService.html":{}}}],["admin",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["alwaysincludepattern",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":662,"title":{},"body":{"index.html":{}}}],["api/login",{"_index":371,"title":{},"body":{"controllers/LoginController.html":{}}}],["api/users",{"_index":462,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibody",{"_index":381,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["apiproperty({uniqueitems",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["apitags",{"_index":382,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UsersController.html":{}}}],["apitags('login",{"_index":388,"title":{},"body":{"controllers/LoginController.html":{}}}],["apitags('users",{"_index":492,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":639,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["app_filter",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["appender",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appenders",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":628,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":59,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":280,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["argumentmetadata",{"_index":536,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":553,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["async",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["authcontroller",{"_index":91,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":490,"title":{},"body":{"controllers/UsersController.html":{}}}],["authmodule",{"_index":64,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":671,"title":{},"body":{"index.html":{}}}],["authresult",{"_index":418,"title":{},"body":{"injectables/LoginService.html":{}}}],["authresult.code",{"_index":420,"title":{},"body":{"injectables/LoginService.html":{}}}],["authresult?.user?.username",{"_index":423,"title":{},"body":{"injectables/LoginService.html":{}}}],["authservice",{"_index":96,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":683,"title":{},"body":{"modules.html":{}}}],["await",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":663,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":539,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception(`validation",{"_index":552,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["baselogpath",{"_index":560,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["baselogpath}/access/access.log",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baselogpath}/app",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baselogpath}/errors/error.log",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["basename",{"_index":307,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["basename}(line",{"_index":309,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["body",{"_index":378,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":533,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["break",{"_index":260,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["browse",{"_index":681,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":679,"title":{},"body":{"modules.html":{}}}],["building",{"_index":623,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":434,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["case",{"_index":257,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/LoginService.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["categories",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["category",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["certificate",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["certificate(user",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["chalk",{"_index":211,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.cyan(leveloutput",{"_index":262,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.green(leveloutput",{"_index":259,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.green(typeoutput)}${dateoutput",{"_index":271,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.grey(leveloutput",{"_index":270,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.hex('#dd4c35')(leveloutput",{"_index":268,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.red(leveloutput",{"_index":266,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.yellow",{"_index":272,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["chalk.yellow(leveloutput",{"_index":264,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"classes/Logger.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"classes/Logger.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cluster_appmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_loginmodule",{"_index":404,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":406,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_loginmodule_providers",{"_index":405,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":505,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_imports",{"_index":507,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":506,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["column",{"_index":310,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["columnnumber",{"_index":195,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["compodoc生成nest",{"_index":635,"title":{},"body":{"index.html":{}}}],["config",{"_index":212,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["config/log4js",{"_index":213,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["connection",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model('user",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["constats",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":346,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{}}}],["constructor(context",{"_index":198,"title":{},"body":{"classes/ContextTrace.html":{}}}],["constructor(private",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(role",{"_index":429,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["constructor(usermodel",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["context",{"_index":196,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getargbyindex(1).req",{"_index":441,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["contexttrace",{"_index":191,"title":{"classes/ContextTrace.html":{}},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"coverage.html":{}}}],["controller",{"_index":90,"title":{"controllers/AuthController.html":{},"controllers/LoginController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/LoginController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('api/login",{"_index":389,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('api/users",{"_index":494,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('auth",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":555,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":372,"title":{},"body":{"controllers/LoginController.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":390,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UsersController.html":{}}}],["create(createuserdto",{"_index":467,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(logindto",{"_index":373,"title":{},"body":{"controllers/LoginController.html":{}}}],["createuserdto",{"_index":312,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["ctx",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getrequest",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["data",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["database.providers",{"_index":324,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databasemodule",{"_index":105,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":323,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date\":\"%d\",\"level\":\"%p\",\"category\":\"%c\",\"host\":\"%h\",\"pid\":\"%z\",\"data\":\\'%m",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().tolocalestring",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["date.now",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datefile",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dateoutput",{"_index":245,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["daystokeep",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconnectiontoken",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dd",{"_index":249,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["debug",{"_index":218,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["debug(...args",{"_index":281,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["decorators",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"controllers/UsersController.html":{}}}],["deep",{"_index":363,"title":{},"body":{"classes/Logger.html":{}}}],["default",{"_index":269,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":484,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":61,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":615,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["development",{"_index":640,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["dto/create",{"_index":488,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login.dto",{"_index":385,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["dto/update",{"_index":489,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto、class",{"_index":633,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":651,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":624,"title":{},"body":{"index.html":{}}}],["encrypt",{"_index":614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encryptpassword",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["encryptpassword(password",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":214,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["enumerations",{"_index":608,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error(...args",{"_index":289,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["errorfile",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errors",{"_index":545,"title":{},"body":{"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["errors.length",{"_index":547,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["exception",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":9,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.filter",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["exceptions.filter.ts",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["exceptions.filter.ts:13",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["executioncontext",{"_index":432,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["expiresin",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabaseModule.html":{}}}],["express",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":551,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["false",{"_index":236,"title":{},"body":{"classes/ContextTrace.html":{},"injectables/JwtStrategy.html":{},"classes/Logger.html":{}}}],["fatal",{"_index":220,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(...args",{"_index":291,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["filename",{"_index":305,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["filter/all",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["findall",{"_index":463,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":464,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":499,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["forbiddenexception",{"_index":438,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["framework",{"_index":622,"title":{},"body":{"index.html":{}}}],["function",{"_index":568,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":610,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@useinterceptors(new",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{}}}],["getstacktrace",{"_index":355,"title":{},"body":{"classes/Logger.html":{}}}],["getstacktrace(deep",{"_index":297,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["getting",{"_index":618,"title":{"index.html":{}},"body":{}}],["graph",{"_index":682,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":658,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpwd",{"_index":521,"title":{},"body":{"injectables/UsersService.html":{}}}],["here",{"_index":668,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":250,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["host",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["http",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpexception",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://nestjs.com",{"_index":675,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["id",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info(...args",{"_index":285,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["inject",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["inject('usermodeltoken",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":135,"title":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["installation",{"_index":636,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":638,"title":{},"body":{"index.html":{}}}],["instance_id",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["intercept",{"_index":428,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":431,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["interface/user",{"_index":520,"title":{},"body":{"injectables/UsersService.html":{}}}],["isnotempty",{"_index":401,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnotempty({message",{"_index":396,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring",{"_index":402,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring({message",{"_index":399,"title":{},"body":{"classes/LoginDto.html":{}}}],["iuser",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["jinpika0517",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["js",{"_index":210,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["jwt",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwt.strategy",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":106,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":672,"title":{},"body":{"index.html":{}}}],["keepfileext",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layout",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leveloutput",{"_index":253,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["leveloutput}${positionoutput",{"_index":273,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["license",{"_index":678,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":655,"title":{},"body":{"index.html":{}}}],["linenumber",{"_index":197,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["local",{"_index":350,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":107,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":356,"title":{},"body":{"classes/Logger.html":{}}}],["log(...args",{"_index":283,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js",{"_index":206,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{},"index.html":{}}}],["log4js.addlayout('awesome",{"_index":221,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.configure(config",{"_index":274,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.getlogger",{"_index":275,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/variables.html":{}}}],["log4js.getlogger('http",{"_index":295,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4js.loggingevent",{"_index":225,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["log4jsconfig",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logconfig",{"_index":223,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logconfig.type",{"_index":243,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent",{"_index":224,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.data.foreach((value",{"_index":229,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.level",{"_index":254,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.level.tostring",{"_index":256,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logevent.pid.tostring",{"_index":244,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logformat",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/TransformInterceptor.html":{}}}],["logger",{"_index":34,"title":{"classes/Logger.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger(req",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["logger.debug(logger.getstacktrace",{"_index":282,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.error(`validation",{"_index":550,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["logger.error(logger.getstacktrace",{"_index":290,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.fatal(logger.getstacktrace",{"_index":292,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.info(logger.getstacktrace",{"_index":284,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.level",{"_index":276,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.trace(logger.getstacktrace",{"_index":279,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logger.warn(logger.getstacktrace",{"_index":287,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggercustom",{"_index":294,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggercustom.info(logger.getstacktrace",{"_index":296,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel",{"_index":215,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["loggerlevel.debug",{"_index":258,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.error",{"_index":265,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.fatal",{"_index":267,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.info",{"_index":261,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.trace",{"_index":277,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerlevel.warn",{"_index":263,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["loggerservice",{"_index":252,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["logical/auth/auth.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":411,"title":{},"body":{"injectables/LoginService.html":{}}}],["login(logindto",{"_index":413,"title":{},"body":{"injectables/LoginService.html":{}}}],["login.controller",{"_index":408,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.service",{"_index":387,"title":{},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{}}}],["logincontroller",{"_index":369,"title":{"controllers/LoginController.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["logindto",{"_index":374,"title":{"classes/LoginDto.html":{}},"body":{"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginmodule",{"_index":65,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginservice",{"_index":386,"title":{"injectables/LoginService.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["logintype",{"_index":393,"title":{},"body":{"classes/LoginDto.html":{},"injectables/LoginService.html":{}}}],["loglevelfilter",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["makesalt",{"_index":518,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["map",{"_index":447,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":451,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["mark",{"_index":216,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["matching",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxlogsize",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["messagelist",{"_index":228,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messagelist.join",{"_index":240,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messagelist.push(value",{"_index":238,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["messageoutput",{"_index":239,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["metadata",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":532,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["miscellaneous",{"_index":607,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":654,"title":{},"body":{"index.html":{}}}],["mm",{"_index":248,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["mode",{"_index":644,"title":{},"body":{"index.html":{}}}],["model",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":58,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{}}}],["modulename",{"_index":226,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["moduleoutput",{"_index":251,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["modules",{"_index":60,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":208,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["moment(logevent.starttime).format",{"_index":246,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["mongodb",{"_index":632,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.connect('mongodb://127.0.0.1:27017/nest",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":667,"title":{},"body":{"index.html":{}}}],["msg",{"_index":548,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["myśliwiec",{"_index":673,"title":{},"body":{"index.html":{}}}],["n",{"_index":311,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["name",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":222,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"index.html":{}}}],["nestframework",{"_index":677,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":437,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":455,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":320,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LocalStrategy.html":{},"injectables/RbacInterceptor.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":433,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["next.handle",{"_index":443,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["next.handle().pipe",{"_index":450,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["node.js",{"_index":621,"title":{},"body":{"index.html":{}}}],["npm",{"_index":637,"title":{},"body":{"index.html":{}}}],["null",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginService.html":{}}}],["numbackups",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":199,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":543,"title":{},"body":{"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["object.values(errors[0].constraints)[0",{"_index":549,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["observable",{"_index":436,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{}}}],["open",{"_index":656,"title":{},"body":{"index.html":{}}}],["optional",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["out/app.log",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":684,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":583,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":483,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":454,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":458,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":482,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["path.basename(filename",{"_index":308,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["path.resolve(__dirname",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload._id",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":394,"title":{},"body":{"classes/LoginDto.html":{},"injectables/LoginService.html":{}}}],["pipetransform",{"_index":538,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":540,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":544,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":665,"title":{},"body":{"index.html":{}}}],["pm2",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pm2instancevar",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["position",{"_index":227,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["positionoutput",{"_index":241,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["post",{"_index":379,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UsersController.html":{}}}],["post()@apibody({type",{"_index":468,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LoginController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":646,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":620,"title":{},"body":{"index.html":{}}}],["project",{"_index":657,"title":{},"body":{"index.html":{}}}],["promise",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":193,"title":{},"body":{"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["provide",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabaseModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":194,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["rbac",{"_index":634,"title":{},"body":{"index.html":{}}}],["rbacinterceptor",{"_index":426,"title":{"injectables/RbacInterceptor.html":{}},"body":{"injectables/RbacInterceptor.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["rbacinterceptor(['admin",{"_index":497,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":666,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["registertime",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":465,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":503,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":526,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":631,"title":{},"body":{"index.html":{}}}],["req",{"_index":440,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/functions.html":{}}}],["request.url",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["required",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":421,"title":{},"body":{"injectables/LoginService.html":{},"miscellaneous/functions.html":{}}}],["res?.data?.token",{"_index":424,"title":{},"body":{"injectables/LoginService.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/functions.html":{}}}],["results",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":425,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{}}}],["rootpath",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["routers/login/login.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["routers/users/users.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["routers/users/users.service",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["rulerestype",{"_index":415,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":641,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":439,"title":{},"body":{"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":448,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["salt",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":625,"title":{},"body":{"index.html":{}}}],["secret",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":626,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["side",{"_index":627,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":660,"title":{},"body":{"index.html":{}}}],["src/.../constats.ts",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cryptogram.ts",{"_index":612,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../database.providers.ts",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log4js.ts",{"_index":609,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../logger.middleware.ts",{"_index":613,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":611,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.providers.ts",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/log4js.ts",{"_index":558,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/filter/all",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/interceptor/rbac.interceptor",{"_index":491,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/interceptor/rbac.interceptor.ts",{"_index":427,"title":{},"body":{"injectables/RbacInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/rbac.interceptor.ts:12",{"_index":430,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["src/interceptor/rbac.interceptor.ts:15",{"_index":435,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["src/interceptor/transform.interceptor.ts",{"_index":445,"title":{},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/transform.interceptor.ts:13",{"_index":446,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/logical/auth/auth.controller.ts",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/logical/auth/auth.module",{"_index":409,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/logical/auth/auth.module.ts",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/logical/auth/auth.service",{"_index":417,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/logical/auth/auth.service.ts",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/logical/auth/auth.service.ts:10",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/logical/auth/auth.service.ts:19",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/logical/auth/auth.service.ts:66",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/logical/auth/constats.ts",{"_index":566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logical/auth/jwt.strategy.ts",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/logical/auth/jwt.strategy.ts:18",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/logical/auth/jwt.strategy.ts:8",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/logical/auth/local.strategy.ts",{"_index":345,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/logical/auth/local.strategy.ts:12",{"_index":349,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/logical/auth/local.strategy.ts:7",{"_index":347,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/main.ts",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/logger.middleware.ts",{"_index":570,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pipe/validation.pipe",{"_index":384,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/pipe/validation.pipe.ts",{"_index":527,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/pipe/validation.pipe.ts:14",{"_index":537,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/pipe/validation.pipe.ts:30",{"_index":531,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/providers/database/database.module",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["src/providers/database/database.module.ts",{"_index":322,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/providers/database/database.providers.ts",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/routers/login/dto/login.dto.ts",{"_index":392,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/routers/login/dto/login.dto.ts:12",{"_index":398,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/routers/login/dto/login.dto.ts:16",{"_index":397,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/routers/login/dto/login.dto.ts:8",{"_index":400,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/routers/login/login.controller.ts",{"_index":370,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/routers/login/login.controller.ts:15",{"_index":377,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/routers/login/login.module.ts",{"_index":407,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/routers/login/login.service.ts",{"_index":410,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/routers/login/login.service.ts:7",{"_index":412,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/routers/login/login.service.ts:9",{"_index":414,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/routers/users/dto/create",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/routers/users/dto/update",{"_index":453,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/routers/users/entities/user.entity.ts",{"_index":459,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/routers/users/interface/user",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/routers/users/schema/user.schema.ts",{"_index":572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/routers/users/users.controller.ts",{"_index":461,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/routers/users/users.controller.ts:27",{"_index":469,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/routers/users/users.controller.ts:33",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/routers/users/users.controller.ts:38",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/routers/users/users.controller.ts:43",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/routers/users/users.controller.ts:48",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/routers/users/users.module",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/routers/users/users.module.ts",{"_index":508,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/routers/users/users.providers",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/routers/users/users.providers.ts",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/routers/users/users.service",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/routers/users/users.service.ts",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/routers/users/users.service.ts:10",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/routers/users/users.service.ts:16",{"_index":513,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/routers/users/users.service.ts:28",{"_index":514,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/routers/users/users.service.ts:33",{"_index":515,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/routers/users/users.service.ts:37",{"_index":517,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/routers/users/users.service.ts:41",{"_index":516,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/types/global",{"_index":416,"title":{},"body":{"injectables/LoginService.html":{},"injectables/UsersService.html":{}}}],["src/utils/cryptogram",{"_index":519,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/cryptogram.ts",{"_index":577,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/log4js",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/utils/log4js.ts",{"_index":192,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/utils/log4js.ts:104",{"_index":366,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:108",{"_index":359,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:112",{"_index":365,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:116",{"_index":364,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:120",{"_index":367,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:124",{"_index":368,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:128",{"_index":360,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:132",{"_index":361,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:136",{"_index":358,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:142",{"_index":362,"title":{},"body":{"classes/Logger.html":{}}}],["src/utils/log4js.ts:23",{"_index":200,"title":{},"body":{"classes/ContextTrace.html":{}}}],["src/utils/log4js.ts:25",{"_index":203,"title":{},"body":{"classes/ContextTrace.html":{}}}],["src/utils/log4js.ts:26",{"_index":205,"title":{},"body":{"classes/ContextTrace.html":{}}}],["src/utils/log4js.ts:27",{"_index":204,"title":{},"body":{"classes/ContextTrace.html":{}}}],["src/utils/log4js.ts:28",{"_index":202,"title":{},"body":{"classes/ContextTrace.html":{}}}],["stackinfo",{"_index":301,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.columnnumber",{"_index":304,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.filename",{"_index":306,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stackinfo.linenumber",{"_index":303,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacklist",{"_index":298,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacklist[deep",{"_index":302,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace",{"_index":209,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["stacktrace.getsync",{"_index":300,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["stacktrace.stackframe",{"_index":299,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["start",{"_index":642,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":645,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":647,"title":{},"body":{"index.html":{}}}],["started",{"_index":619,"title":{"index.html":{}},"body":{}}],["starter",{"_index":630,"title":{},"body":{"index.html":{}}}],["statements",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"classes/ContextTrace.html":{},"classes/Logger.html":{},"dependencies.html":{}}}],["status",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":669,"title":{},"body":{"index.html":{}}}],["step",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["strategy",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"classes/LoginDto.html":{},"injectables/RbacInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":661,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":680,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":604,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["switch",{"_index":255,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/LoginService.html":{}}}],["table",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":650,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":653,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":652,"title":{},"body":{"index.html":{}}}],["tests",{"_index":649,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":659,"title":{},"body":{"index.html":{}}}],["this.authservice.certificate(authresult?.user",{"_index":422,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.authservice.validateuser",{"_index":419,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.authservice.validateuser(username",{"_index":352,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.jwtservice.sign(payload",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loginservice.login(logindto",{"_index":391,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.role.includes(req.headers?.role",{"_index":442,"title":{},"body":{"injectables/RbacInterceptor.html":{}}}],["this.tovalidate(metatype",{"_index":542,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.usermodel.create",{"_index":522,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find",{"_index":523,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":495,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":498,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(+id",{"_index":500,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(+id",{"_index":504,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":502,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":353,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/RbacInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["todo",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["token",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LoginService.html":{}}}],["touch",{"_index":670,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":528,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":530,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["trace",{"_index":217,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["trace(...args",{"_index":278,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["transform",{"_index":529,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":534,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":541,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":444,"title":{"injectables/TransformInterceptor.html":{}},"body":{"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["true",{"_index":237,"title":{},"body":{"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"classes/Logger.html":{},"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["twitter",{"_index":676,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/ContextTrace.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Logger.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"injectables/RbacInterceptor.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":234,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["typeoutput",{"_index":242,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["types",{"_index":456,"title":{},"body":{"classes/UpdateUserDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["types.includes(metatype",{"_index":554,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":629,"title":{},"body":{"index.html":{}}}],["ui",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":351,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":535,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["unique",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uniqueitems",{"_index":321,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["unit",{"_index":648,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["update",{"_index":466,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":501,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updates",{"_index":525,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":452,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["useclass",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":485,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(authguard('jwt",{"_index":493,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":486,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(new",{"_index":496,"title":{},"body":{"controllers/UsersController.html":{}}}],["usepipes",{"_index":380,"title":{},"body":{"controllers/LoginController.html":{}}}],["usepipes(new",{"_index":375,"title":{},"body":{"controllers/LoginController.html":{}}}],["user",{"_index":149,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":457,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:4",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.salt",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?._id",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["usermodel",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["usermodeltoken",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["username",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":509,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.providers",{"_index":510,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":487,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userschema",{"_index":573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":460,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":66,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersproviders",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersservice",{"_index":108,"title":{"injectables/UsersService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["util",{"_index":207,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["util.inspect(value",{"_index":235,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["utils/cryptogram",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/log4js",{"_index":449,"title":{},"body":{"injectables/TransformInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["validate",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":546,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(payload",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":348,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationpipe",{"_index":383,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/LoginController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validationpipe())@post()@apibody({type",{"_index":376,"title":{},"body":{"controllers/LoginController.html":{}}}],["validator",{"_index":403,"title":{},"body":{"classes/LoginDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{},"index.html":{}}}],["value",{"_index":230,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.columnnumber",{"_index":233,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["value.context",{"_index":231,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["value.linenumber",{"_index":232,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["variable",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":688,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/Logger.html":{}}}],["warn",{"_index":219,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{},"miscellaneous/enumerations.html":{}}}],["warn(...args",{"_index":286,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["warning",{"_index":357,"title":{},"body":{"classes/Logger.html":{}}}],["warning(...args",{"_index":288,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["watch",{"_index":643,"title":{},"body":{"index.html":{}}}],["website",{"_index":674,"title":{},"body":{"index.html":{}}}],["yes",{"_index":201,"title":{},"body":{"classes/ContextTrace.html":{}}}],["you'd",{"_index":664,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":247,"title":{},"body":{"classes/ContextTrace.html":{},"classes/Logger.html":{}}}],["yyyymmdd",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filter/all-exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filter/all-exceptions.filter.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { Logger } from 'src/utils/log4js';\n\n@Catch() // 捕获所有异常\nexport class AllExceptionsFilter implements ExceptionFilter {\n  catch(exception: Error, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status =\n      exception instanceof HttpException\n        ? exception.getStatus()\n        : HttpStatus.INTERNAL_SERVER_ERROR;\n    // @todo 记录日志\n    const logFormat = ` = 500 ? 'Service Error' : 'Client Error'}`,\n      timestamp: new Date().toLocaleString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from './routers/users/users.module';\nimport { LoginModule } from './routers/login/login.module';\nimport { APP_FILTER } from '@nestjs/core';\nimport { AllExceptionsFilter } from './filter/all-exceptions.filter';\nimport { AuthModule } from './logical/auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    UsersModule,\n    LoginModule,\n    AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n    }),\n  ],\n  providers: [\n    {\n      provide: APP_FILTER,\n      useClass: AllExceptionsFilter,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logical/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logical/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constats';\nimport { UsersModule } from 'src/routers/users/users.module';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { usersProviders } from 'src/routers/users/users.providers';\nimport { DatabaseModule } from 'src/providers/database/database.module';\nimport { UsersService } from 'src/routers/users/users.service';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '1h' }, // token 过期时效\n    }),\n    UsersModule,\n    DatabaseModule,\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    UsersService,\n    ...usersProviders,\n  ],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logical/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                certificate\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/logical/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        certificate\n                        \n                    \n                \n            \n            \n                \n                    \n                    certificate(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/logical/auth/auth.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(userName: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logical/auth/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { UsersService } from '../../routers/users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { encryptPassword } from '../../utils/cryptogram';\nimport { Model } from 'mongoose';\nimport { IUser } from 'src/routers/users/interface/user';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject('UserModelToken')\n    private readonly userModel: Model,\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  // JWT验证 - Step 2: 校验用户信息\n  async validateUser(userName: string, password: string): Promise {\n    if (userName === 'admin') {\n      if (password === 'admin') {\n        return {\n          code: 0,\n          message: '管理员登录成功',\n          user: { userName },\n        };\n      }\n      return {\n        code: -2,\n        user: null,\n        message: '密码错误',\n      };\n    } else {\n      const user = await this.userModel.findOne({ userName });\n      if (user) {\n        const hashedPassword = user.password;\n        const salt = user.salt;\n        // 通过密码盐，加密传参，再与数据库里的比较，判断是否相等\n        const hashPassword = encryptPassword(password, salt);\n        if (hashedPassword === hashPassword) {\n          // 密码正确\n          return {\n            code: 0,\n            user,\n            message: '密码正确',\n          };\n        } else {\n          // 密码错误\n          return {\n            code: -2,\n            user: null,\n            message: '密码错误',\n          };\n        }\n      }\n      // 查无此人\n      return {\n        code: -1,\n        user: null,\n        message: '查无此人',\n      };\n    }\n  }\n\n  // JWT验证 - Step 3: 处理 jwt 签证\n  async certificate(user: any) {\n    const payload = {\n      userName: user.userName,\n      _id: user.userName === 'admin' ? 0 : user?._id,\n    };\n    try {\n      const token = this.jwtService.sign(payload);\n      return {\n        code: 0,\n        data: {\n          token,\n        },\n        message: `登录成功`,\n      };\n    } catch (error) {\n      return {\n        code: -1,\n        message: `账号或密码错误`,\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextTrace.html":{"url":"classes/ContextTrace.html","title":"class - ContextTrace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextTrace\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/log4js.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                columnNumber\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                lineNumber\n                            \n                            \n                                    Public\n                                    Readonly\n                                    Optional\n                                path\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(context: string, path?: string, lineNumber?: number, columnNumber?: number)\n                    \n                \n                        \n                            \n                                Defined in src/utils/log4js.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        lineNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        columnNumber\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        columnNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/log4js.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/log4js.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        lineNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/log4js.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                            Optional\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/log4js.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import * as Path from 'path';\nimport * as Log4js from 'log4js';\nimport * as Util from 'util';\nimport * as Moment from 'moment'; // 处理时间的工具\nimport * as StackTrace from 'stacktrace-js';\nimport Chalk from 'chalk';\nimport config from '../config/log4js';\n\n// 日志级别\nexport enum LoggerLevel {\n  ALL = 'ALL',\n  MARK = 'MARK',\n  TRACE = 'TRACE',\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  FATAL = 'FATAL',\n  OFF = 'OFF',\n}\n\n// 内容跟踪类\nexport class ContextTrace {\n  constructor(\n    public readonly context: string,\n    public readonly path?: string,\n    public readonly lineNumber?: number,\n    public readonly columnNumber?: number,\n  ) {}\n}\n\nLog4js.addLayout('Awesome-nest', (logConfig: any) => {\n  return (logEvent: Log4js.LoggingEvent): string => {\n    let moduleName = '';\n    let position = '';\n\n    // 日志组装\n    const messageList: string[] = [];\n    logEvent.data.forEach((value: any) => {\n      if (value instanceof ContextTrace) {\n        moduleName = value.context;\n        // 显示触发日志的坐标（行，列）\n        if (value.lineNumber && value.columnNumber) {\n          position = `${value.lineNumber}, ${value.columnNumber}`;\n        }\n        return;\n      }\n\n      if (typeof value !== 'string') {\n        value = Util.inspect(value, false, 3, true);\n      }\n\n      messageList.push(value);\n    });\n\n    // 日志组成部分\n    const messageOutput: string = messageList.join(' ');\n    const positionOutput: string = position ? ` [${position}]` : '';\n    const typeOutput = `[${logConfig.type}] ${logEvent.pid.toString()}   - `;\n    const dateOutput = `${Moment(logEvent.startTime).format(\n      'YYYY-MM-DD HH:mm:ss',\n    )}`;\n    const moduleOutput: string = moduleName\n      ? `[${moduleName}] `\n      : '[LoggerService] ';\n    let levelOutput = `[${logEvent.level}] ${messageOutput}`;\n\n    // 根据日志级别，用不同颜色区分\n    switch (logEvent.level.toString()) {\n      case LoggerLevel.DEBUG:\n        levelOutput = Chalk.green(levelOutput);\n        break;\n      case LoggerLevel.INFO:\n        levelOutput = Chalk.cyan(levelOutput);\n        break;\n      case LoggerLevel.WARN:\n        levelOutput = Chalk.yellow(levelOutput);\n        break;\n      case LoggerLevel.ERROR:\n        levelOutput = Chalk.red(levelOutput);\n        break;\n      case LoggerLevel.FATAL:\n        levelOutput = Chalk.hex('#DD4C35')(levelOutput);\n        break;\n      default:\n        levelOutput = Chalk.grey(levelOutput);\n        break;\n    }\n\n    return `${Chalk.green(typeOutput)}${dateOutput}  ${Chalk.yellow(\n      moduleOutput,\n    )}${levelOutput}${positionOutput}`;\n  };\n});\n\n// 注入配置\nLog4js.configure(config);\n\n// 实例化\nconst logger = Log4js.getLogger();\nlogger.level = LoggerLevel.TRACE;\n\nexport class Logger {\n  static trace(...args) {\n    logger.trace(Logger.getStackTrace(), ...args);\n  }\n\n  static debug(...args) {\n    logger.debug(Logger.getStackTrace(), ...args);\n  }\n\n  static log(...args) {\n    logger.info(Logger.getStackTrace(), ...args);\n  }\n\n  static info(...args) {\n    logger.info(Logger.getStackTrace(), ...args);\n  }\n\n  static warn(...args) {\n    logger.warn(Logger.getStackTrace(), ...args);\n  }\n\n  static warning(...args) {\n    logger.warn(Logger.getStackTrace(), ...args);\n  }\n\n  static error(...args) {\n    logger.error(Logger.getStackTrace(), ...args);\n  }\n\n  static fatal(...args) {\n    logger.fatal(Logger.getStackTrace(), ...args);\n  }\n\n  static access(...args) {\n    const loggerCustom = Log4js.getLogger('http');\n    loggerCustom.info(Logger.getStackTrace(), ...args);\n  }\n\n  // 日志追踪，可以追溯到哪个文件、第几行第几列\n  static getStackTrace(deep = 2): string {\n    const stackList: StackTrace.StackFrame[] = StackTrace.getSync();\n    const stackInfo: StackTrace.StackFrame = stackList[deep];\n\n    const lineNumber: number = stackInfo.lineNumber;\n    const columnNumber: number = stackInfo.columnNumber;\n    const fileName: string = stackInfo.fileName;\n    const basename: string = Path.basename(fileName);\n    return `${basename}(line: ${lineNumber}, column: ${columnNumber}): \\n`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routers/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routers/users/dto/create-user.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({uniqueItems: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routers/users/dto/create-user.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nexport class CreateUserDto {\n  @ApiProperty({ uniqueItems: true })\n  readonly userName: string;\n  @ApiProperty()\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/providers/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logical/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/logical/auth/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/logical/auth/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constats';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  // JWT验证 - Step 4: 被守卫调用\n  async validate(payload: any) {\n    return {\n      userId: payload._id,\n      username: payload.userName,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logical/auth/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/logical/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/logical/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Logger.html":{"url":"classes/Logger.html","title":"class - Logger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Logger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/log4js.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                access\n                            \n                            \n                                    Static\n                                debug\n                            \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                fatal\n                            \n                            \n                                    Static\n                                getStackTrace\n                            \n                            \n                                    Static\n                                info\n                            \n                            \n                                    Static\n                                log\n                            \n                            \n                                    Static\n                                trace\n                            \n                            \n                                    Static\n                                warn\n                            \n                            \n                                    Static\n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        access\n                        \n                    \n                \n            \n            \n                \n                    \n                    access(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        fatal\n                        \n                    \n                \n            \n            \n                \n                    \n                    fatal(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getStackTrace\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStackTrace(deep: number)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    deep\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        2\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        trace\n                        \n                    \n                \n            \n            \n                \n                    \n                    trace(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        warning\n                        \n                    \n                \n            \n            \n                \n                    \n                    warning(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/utils/log4js.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Path from 'path';\nimport * as Log4js from 'log4js';\nimport * as Util from 'util';\nimport * as Moment from 'moment'; // 处理时间的工具\nimport * as StackTrace from 'stacktrace-js';\nimport Chalk from 'chalk';\nimport config from '../config/log4js';\n\n// 日志级别\nexport enum LoggerLevel {\n  ALL = 'ALL',\n  MARK = 'MARK',\n  TRACE = 'TRACE',\n  DEBUG = 'DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  FATAL = 'FATAL',\n  OFF = 'OFF',\n}\n\n// 内容跟踪类\nexport class ContextTrace {\n  constructor(\n    public readonly context: string,\n    public readonly path?: string,\n    public readonly lineNumber?: number,\n    public readonly columnNumber?: number,\n  ) {}\n}\n\nLog4js.addLayout('Awesome-nest', (logConfig: any) => {\n  return (logEvent: Log4js.LoggingEvent): string => {\n    let moduleName = '';\n    let position = '';\n\n    // 日志组装\n    const messageList: string[] = [];\n    logEvent.data.forEach((value: any) => {\n      if (value instanceof ContextTrace) {\n        moduleName = value.context;\n        // 显示触发日志的坐标（行，列）\n        if (value.lineNumber && value.columnNumber) {\n          position = `${value.lineNumber}, ${value.columnNumber}`;\n        }\n        return;\n      }\n\n      if (typeof value !== 'string') {\n        value = Util.inspect(value, false, 3, true);\n      }\n\n      messageList.push(value);\n    });\n\n    // 日志组成部分\n    const messageOutput: string = messageList.join(' ');\n    const positionOutput: string = position ? ` [${position}]` : '';\n    const typeOutput = `[${logConfig.type}] ${logEvent.pid.toString()}   - `;\n    const dateOutput = `${Moment(logEvent.startTime).format(\n      'YYYY-MM-DD HH:mm:ss',\n    )}`;\n    const moduleOutput: string = moduleName\n      ? `[${moduleName}] `\n      : '[LoggerService] ';\n    let levelOutput = `[${logEvent.level}] ${messageOutput}`;\n\n    // 根据日志级别，用不同颜色区分\n    switch (logEvent.level.toString()) {\n      case LoggerLevel.DEBUG:\n        levelOutput = Chalk.green(levelOutput);\n        break;\n      case LoggerLevel.INFO:\n        levelOutput = Chalk.cyan(levelOutput);\n        break;\n      case LoggerLevel.WARN:\n        levelOutput = Chalk.yellow(levelOutput);\n        break;\n      case LoggerLevel.ERROR:\n        levelOutput = Chalk.red(levelOutput);\n        break;\n      case LoggerLevel.FATAL:\n        levelOutput = Chalk.hex('#DD4C35')(levelOutput);\n        break;\n      default:\n        levelOutput = Chalk.grey(levelOutput);\n        break;\n    }\n\n    return `${Chalk.green(typeOutput)}${dateOutput}  ${Chalk.yellow(\n      moduleOutput,\n    )}${levelOutput}${positionOutput}`;\n  };\n});\n\n// 注入配置\nLog4js.configure(config);\n\n// 实例化\nconst logger = Log4js.getLogger();\nlogger.level = LoggerLevel.TRACE;\n\nexport class Logger {\n  static trace(...args) {\n    logger.trace(Logger.getStackTrace(), ...args);\n  }\n\n  static debug(...args) {\n    logger.debug(Logger.getStackTrace(), ...args);\n  }\n\n  static log(...args) {\n    logger.info(Logger.getStackTrace(), ...args);\n  }\n\n  static info(...args) {\n    logger.info(Logger.getStackTrace(), ...args);\n  }\n\n  static warn(...args) {\n    logger.warn(Logger.getStackTrace(), ...args);\n  }\n\n  static warning(...args) {\n    logger.warn(Logger.getStackTrace(), ...args);\n  }\n\n  static error(...args) {\n    logger.error(Logger.getStackTrace(), ...args);\n  }\n\n  static fatal(...args) {\n    logger.fatal(Logger.getStackTrace(), ...args);\n  }\n\n  static access(...args) {\n    const loggerCustom = Log4js.getLogger('http');\n    loggerCustom.info(Logger.getStackTrace(), ...args);\n  }\n\n  // 日志追踪，可以追溯到哪个文件、第几行第几列\n  static getStackTrace(deep = 2): string {\n    const stackList: StackTrace.StackFrame[] = StackTrace.getSync();\n    const stackInfo: StackTrace.StackFrame = stackList[deep];\n\n    const lineNumber: number = stackInfo.lineNumber;\n    const columnNumber: number = stackInfo.columnNumber;\n    const fileName: string = stackInfo.fileName;\n    const basename: string = Path.basename(fileName);\n    return `${basename}(line: ${lineNumber}, column: ${columnNumber}): \\n`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routers/login/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/login\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UsePipes(new ValidationPipe())@Post()@ApiBody({type: LoginDto})\n                \n            \n\n            \n                \n                    Defined in src/routers/login/login.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, UsePipes } from '@nestjs/common';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { ValidationPipe } from 'src/pipe/validation.pipe';\nimport { LoginDto } from './dto/login.dto';\nimport { LoginService } from './login.service';\n\n@ApiTags('login')\n@Controller('api/login')\nexport class LoginController {\n  constructor(private readonly loginService: LoginService) {}\n\n  @UsePipes(new ValidationPipe())\n  @Post()\n  @ApiBody({ type: LoginDto })\n  create(@Body() loginDto: LoginDto) {\n    return this.loginService.login(loginDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routers/login/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginType\n                            \n                            \n                                password\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"phone\" | \"account\"\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '登录类型不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routers/login/dto/login.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '密码不能为空'})@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routers/login/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: '用户名必须是 String 类型'})@IsNotEmpty({message: '用户名不能为空'})@ApiProperty({uniqueItems: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/routers/login/dto/login.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString({ message: '用户名必须是 String 类型' })\n  @IsNotEmpty({ message: '用户名不能为空' })\n  @ApiProperty({ uniqueItems: true })\n  userName: string;\n\n  @IsNotEmpty({ message: '密码不能为空' })\n  @ApiProperty()\n  password: string;\n\n  @IsNotEmpty({ message: '登录类型不能为空' })\n  @ApiProperty()\n  loginType: 'phone' | 'account';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_LoginModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nAuthModule->LoginModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/routers/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoginController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoginService } from './login.service';\nimport { LoginController } from './login.controller';\nimport { AuthModule } from 'src/logical/auth/auth.module';\n\n@Module({\n  imports: [AuthModule],\n  controllers: [LoginController],\n  providers: [LoginService],\n})\nexport class LoginModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routers/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/routers/login/login.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/routers/login/login.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { LoginDto } from './dto/login.dto';\nimport { RuleResType } from 'src/types/global';\nimport { AuthService } from 'src/logical/auth/auth.service';\n\n@Injectable()\nexport class LoginService {\n  constructor(private readonly authService: AuthService) {}\n  async login(loginDto: LoginDto): Promise> {\n    const { userName, password, loginType } = loginDto;\n    if (loginType === 'account') {\n      const authResult = await this.authService.validateUser(\n        userName,\n        password,\n      );\n      switch (authResult.code) {\n        case 0:\n          const res = await this.authService.certificate(authResult?.user);\n          if (authResult?.user?.userName === 'admin') {\n            return {\n              code: 0,\n              message: '管理员登录成功',\n              data: {\n                token: res?.data?.token,\n                role: 'admin',\n                name: 'admin',\n              },\n            };\n          }\n          return {\n            code: 0,\n            message: '登录成功',\n            data: {\n              token: res?.data?.token,\n            },\n          };\n        case -2:\n          return {\n            code: -1,\n            message: '账号或密码不正确',\n            data: null,\n          };\n        default:\n          return {\n            code: -1,\n            message: '账号不存在',\n            data: null,\n          };\n      }\n    }\n    if (loginType === 'phone') {\n      return {\n        code: 0,\n        message: '管理员登录成功',\n        data: {\n          token: '手机号登录',\n          role: 'admin',\n        },\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RbacInterceptor.html":{"url":"injectables/RbacInterceptor.html","title":"injectable - RbacInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RbacInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/rbac.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(role: string[])\n                    \n                \n                        \n                            \n                                Defined in src/interceptor/rbac.interceptor.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        role\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/rbac.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RbacInterceptor implements NestInterceptor {\n  // role[用户角色]: 0-超级管理员 | 1-管理员 | 2-开发&测试&运营 | 3-普通用户（只能查看）\n  constructor(private readonly role: string[]) {}\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const req = context.getArgByIndex(1).req;\n    if (!this.role.includes(req.headers?.role)) {\n      throw new ForbiddenException('对不起，您无权操作');\n    }\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/transform.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Logger } from '../utils/log4js';\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const req = context.getArgByIndex(1).req;\n    return next.handle().pipe(\n      map((data) => {\n        const logFormat = ` \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routers/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routers/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routers/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBody({type: CreateUserDto})\n                \n            \n\n            \n                \n                    Defined in src/routers/users/users.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseInterceptors(new RbacInterceptor())\n                \n            \n\n            \n                \n                    Defined in src/routers/users/users.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/routers/users/users.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/routers/users/users.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/routers/users/users.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { RbacInterceptor } from 'src/interceptor/rbac.interceptor';\n\n@ApiTags('users')\n@UseGuards(AuthGuard('jwt'))\n@Controller('api/users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiBody({ type: CreateUserDto })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  @UseInterceptors(new RbacInterceptor(['admin', 'user']))\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/routers/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { DatabaseModule } from 'src/providers/database/database.module';\nimport { usersProviders } from './users.providers';\n\n@Module({\n  imports: [DatabaseModule],\n  controllers: [UsersController],\n  providers: [UsersService, ...usersProviders],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/routers/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/routers/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/routers/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/routers/users/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/routers/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/routers/users/users.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/routers/users/users.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { RuleResType } from 'src/types/global';\nimport { encryptPassword, makeSalt } from 'src/utils/cryptogram';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { IUser } from './interface/user';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject('UserModelToken')\n    private readonly userModel: Model,\n  ) {}\n\n  async create(createUserDto: CreateUserDto): Promise> {\n    const { userName, password } = createUserDto;\n    const salt = makeSalt(); // 制作密码盐\n    const hashPwd = encryptPassword(password, salt); // 加密密码\n    const data = await this.userModel.create({\n      userName,\n      password: hashPwd,\n      salt,\n    });\n    return { code: 0, message: '创建成功', data };\n  }\n\n  async findAll(): Promise> {\n    const data = await this.userModel.find();\n    return { code: 0, message: '查询成功', data };\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} user`;\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipe/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: any)\n                \n            \n\n\n            \n                \n                    Defined in src/pipe/validation.pipe.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipe/validation.pipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ArgumentMetadata,\n  Injectable,\n  PipeTransform,\n  BadRequestException,\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\nimport { Logger } from '../utils/log4js';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      // 如果没有传入验证规则，则不验证，直接返回数据\n      return value;\n    }\n    // 将对象转换为 Class 来验证\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      const msg = Object.values(errors[0].constraints)[0]; // 只需要取第一个错误信息并返回即可\n      Logger.error(`Validation failed: ${msg}`);\n      throw new BadRequestException(`Validation failed: ${msg}`);\n    }\n    return value;\n  }\n\n  private toValidate(metatype: any): boolean {\n    const types: any[] = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/log4js.ts\n            \n            variable\n            baseLogPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/log4js.ts\n            \n            variable\n            log4jsConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filter/all-exceptions.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/rbac.interceptor.ts\n            \n            injectable\n            RbacInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interceptor/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/logical/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logical/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/logical/auth/constats.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logical/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/logical/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/logger.middleware.ts\n            \n            function\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipe/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/providers/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/routers/login/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/routers/login/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/routers/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/routers/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/routers/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/routers/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/routers/users/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/routers/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/routers/users/users.providers.ts\n            \n            variable\n            usersProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/routers/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/utils/cryptogram.ts\n            \n            function\n            encryptPassword\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/cryptogram.ts\n            \n            function\n            makeSalt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/log4js.ts\n            \n            class\n            ContextTrace\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/utils/log4js.ts\n            \n            class\n            Logger\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/utils/log4js.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^8.0.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/serve-static : ^2.2.2\n        \n            @nestjs/swagger : ^5.0.9\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            log4js : ^6.3.0\n        \n            moment : ^2.29.1\n        \n            mongoose : ^6.0.8\n        \n            passport : ^0.5.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            stacktrace-js : ^2.0.2\n        \n            swagger-ui-express : ^4.1.6\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggerLevel   (src/.../log4js.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/log4js.ts\n    \n        \n            \n                \n                    \n                        \n                        LoggerLevel\n                    \n                \n                        \n                            \n                                 ALL\n                            \n                        \n                        \n                            \n                                Value : ALL\n                            \n                        \n                        \n                            \n                                 MARK\n                            \n                        \n                        \n                            \n                                Value : MARK\n                            \n                        \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                Value : TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 FATAL\n                            \n                        \n                        \n                            \n                                Value : FATAL\n                            \n                        \n                        \n                            \n                                 OFF\n                            \n                        \n                        \n                            \n                                Value : OFF\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            encryptPassword   (src/.../cryptogram.ts)\n                        \n                        \n                            logger   (src/.../logger.middleware.ts)\n                        \n                        \n                            makeSalt   (src/.../cryptogram.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/cryptogram.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        encryptPassword\n                        \n                    \n                \n            \n            \n                \nencryptPassword(password: string, salt: string)\n                \n            \n\n\n\n\n            \n                \n                    Encrypt password\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        密码\n\n                                    \n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        密码盐\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeSalt\n                        \n                    \n                \n            \n            \n                \nmakeSalt()\n                \n            \n\n\n\n\n            \n                \n                    Make salt\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    src/middleware/logger.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n            \n                \nlogger(req: Request, res: Response, next)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nNest Admin\n通用的后台管理项目\nDescription\nNest framework TypeScript starter repository.\n掘金参考文章\n基于掘金教程，加入个人想法编写的一套通用admin后端项目\n项目文档实例\nswagger实例\n主要功能\n\nJWT登录鉴权\nlog4js日志系统\nmongodb数据库链接，进行数据处理\nDTO、class-validator参数校验\n基础的RBAC\nswagger自动生成接口文档\nCompodoc生成Nest项目说明文档\n\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nAuthModule->LoginModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAuthModule -->\n\nDatabaseModule->AuthModule\n\n\n\nUsersModule -->\n\nDatabaseModule->UsersModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            baseLogPath   (src/.../log4js.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            jwtConstants   (src/.../constats.ts)\n                        \n                        \n                            log4jsConfig   (src/.../log4js.ts)\n                        \n                        \n                            logger   (src/.../log4js.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                        \n                            usersProviders   (src/.../users.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/log4js.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseLogPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.resolve(__dirname, '../../logs')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log4jsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  appenders: {\n    console: {\n      type: 'console', // 会打印到控制台\n    },\n    access: {\n      type: 'dateFile', // 会写入文件，并按照日期分类\n      filename: `${baseLogPath}/access/access.log`, // 日志文件名，会命名为：access.20200320.log\n      alwaysIncludePattern: true,\n      pattern: 'yyyyMMdd',\n      daysToKeep: 60,\n      numBackups: 3,\n      category: 'http',\n      keepFileExt: true, // 是否保留文件后缀\n    },\n    app: {\n      type: 'dateFile',\n      filename: `${baseLogPath}/app-out/app.log`,\n      alwaysIncludePattern: true,\n      layout: {\n        type: 'pattern',\n        pattern:\n          '{\"date\":\"%d\",\"level\":\"%p\",\"category\":\"%c\",\"host\":\"%h\",\"pid\":\"%z\",\"data\":\\'%m\\'}',\n      },\n      // 日志文件按日期（天）切割\n      pattern: 'yyyyMMdd',\n      daysToKeep: 60,\n      // maxLogSize: 10485760,\n      numBackups: 3,\n      keepFileExt: true,\n    },\n    errorFile: {\n      type: 'dateFile',\n      filename: `${baseLogPath}/errors/error.log`,\n      alwaysIncludePattern: true,\n      layout: {\n        type: 'pattern',\n        pattern:\n          '{\"date\":\"%d\",\"level\":\"%p\",\"category\":\"%c\",\"host\":\"%h\",\"pid\":\"%z\",\"data\":\\'%m\\'}',\n      },\n      // 日志文件按日期（天）切割\n      pattern: 'yyyyMMdd',\n      daysToKeep: 60,\n      // maxLogSize: 10485760,\n      numBackups: 3,\n      keepFileExt: true,\n    },\n    errors: {\n      type: 'logLevelFilter',\n      level: 'ERROR',\n      appender: 'errorFile',\n    },\n  },\n  categories: {\n    default: {\n      appenders: ['app', 'errors'],\n      level: 'DEBUG',\n    },\n    info: { appenders: ['app', 'errors'], level: 'info' },\n    access: { appenders: ['app', 'errors'], level: 'info' },\n    http: { appenders: ['access'], level: 'DEBUG' },\n  },\n  pm2: true, // 使用 pm2 来管理项目时，打开\n  pm2InstanceVar: 'INSTANCE_ID', // 会根据 pm2 分配的 id 进行区分，以免各进程在写日志时造成冲突\n}\n                    \n                \n\n\n        \n    \n\n    src/providers/database/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DbConnectionToken',\n    useFactory: async (): Promise =>\n      await mongoose.connect('mongodb://127.0.0.1:27017/nest-admin'),\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/logical/auth/constats.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'jinpika0517', // 秘钥\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/log4js.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Log4js.getLogger()\n                    \n                \n\n\n        \n    \n\n    src/routers/users/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n  userName: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  salt: {\n    type: String,\n    required: true,\n  },\n  registerTime: {\n    type: Date,\n    default: Date.now,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/routers/users/users.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        usersProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'UserModelToken',\n    useFactory: (connection: Connection) =>\n      connection.model('User', UserSchema),\n    inject: ['DbConnectionToken'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
